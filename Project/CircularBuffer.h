#pragma once

///////////////////////////////////////////////////////////////////////////////
//////////////////////////////// INCLUDES /////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

#include "Utils.h"
#include <stdint.h>

///////////////////////////////////////////////////////////////////////////////
/////////////////////////// CLASSES/STRUCTURES ////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

template <class DATA_TYPE, uint16_t LEN>
class CircularBuffer
{
    public:
        CircularBuffer () = default;
        ~CircularBuffer () = default;

        void Push (DATA_TYPE v_data)
        {
            buffer [begin++] = v_data;
            if (begin == LEN) { begin = ZERO; }
        }

        void Reset (void)
        { 
            do
            {
                Pop ();
            } while (IsEmpty () == false);
        }

        DATA_TYPE Pop (void)
        {
            DATA_TYPE data = buffer [end];
            buffer [end++] = ZERO;

            if (end == LEN) { end = ZERO; }

            return data;
        }

        bool IsEmpty (void) { return (begin == end) ? true : false; }

    private:
        DATA_TYPE begin        = ZERO;
        DATA_TYPE end          = ZERO;
        DATA_TYPE buffer [LEN] = { ZERO };
};

///////////////////////////////////////////////////////////////////////////////
/////////////////////////////// END OF FILE ///////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
